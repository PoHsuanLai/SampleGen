# Training configuration for hip-hop mixer

# Default training parameters
default:
  num_epochs: 5             # Increase from 3 to 5 for better convergence
  batch_size: 1             # Reduce from 4 to 2 to handle increased segment duration
  learning_rate: 2.0e-5     # Adjust from 5.0e-5 to improve stability
  warmup_ratio: 0.15        # Increase from 0.10 for better stability
  weight_decay: 0.02        # Increase from 0.01 to reduce overfitting
  save_strategy: "epoch"
  save_total_limit: 2
  logging_steps: 100        # Log less frequently with large dataset
  evaluation_strategy: "steps"   # Add evaluation
  eval_steps: 500           # Evaluate every 500 steps
  save_steps: 1000          # Save every 1000 steps
  report_to: ["tensorboard"]
  lr_patience: 3            # Increase from 2 to give more time before reducing LR
  lr_factor: 0.6            # Gentler reduction from 0.5

# Models directory configuration
models_dir: "models/finetuned/mixer"  # Directory for storing mixer models (relative to project root)

# Data configuration
data:
  segment_duration: 4.0     # Increase from 5.0 to 8.0 seconds for better musical context
  max_seq_len: 128          # Increase from 128 to 256 for more detailed instructions
  sample_rate: 48000        # Keep as is for CLAP compatibility
  validation_split: 0.10    # Increase from 0.05 to get better validation feedback
  max_train_samples: 5000   # Increase from 2000 to improve generalization
  
  # Include vocals for more complete mixing
  stems:
    - "vocals"
    - "drums"
    - "bass"
    - "other"

# Mixer model configuration
mixer:
  # Change to an open model instead of the gated Mistral model
  mistral_model: 'mistralai/Mistral-7B-v0.1'
  text_model: "bert-base-uncased"
  
  # LoRA parameters
  lora:
    r: 32                 # Increase from 16 to 32 for more expressive capacity
    lora_alpha: 64        # Keep 2x the rank
    lora_dropout: 0.07    # Slight increase from 0.05
    bias: "none"
    task_type: "CAUSAL_LM"
    # Add more target modules for better control
    target_modules:
      - "q_proj"
      - "k_proj"
      - "v_proj"
      - "o_proj"
      - "gate_proj"
      - "up_proj"
      - "down_proj"
      - "lm_head"
  
  # Special tokens for the mixer operations
  special_tokens:
    - "loop"
    - "apply_eq" 
    - "apply_reverb"
    - "apply_delay"
    - "change_volume"
    - "pan"
    - "apply_low_pass"
    - "apply_high_pass"
    - "apply_normalize"
    - "apply_compression"
    - "trim"
    - "duplicate_and_shift"
    - "overlay_with"
    # Generation tools (not used in training yet)
    - "generate_melody"
    - "generate_drums"
    - "generate_bass"
    # Stem types (excluding vocals)
    - "stem=drums"
    - "stem=bass"
    - "stem=other"

# Generator integration settings
generators:
  melody:
    model_name: "facebook/musicgen-melody"
  bass:
    model_name: "facebook/musicgen-small"
  drums:
    model_name: "facebook/musicgen-small"

# Augmentation settings
augmentation:
  min_operations: 3      # Increase from 2 to 3 for more diverse training examples
  max_operations: 6      # Increase from 4 to 6
  operations:
    loop:
      probability: 0.3    # Increase from 0.2
    apply_eq:
      probability: 0.4    # Increase from 0.3
    apply_reverb:
      probability: 0.2    # Increase from 0.15
    apply_delay:
      probability: 0.15
      params:
        delay_ms: [100, 150, 200, 250, 300]
        decay_range: [0.3, 0.7]
    change_volume:
      probability: 0.2
      params:
        db_range: [-3, 3]
    pan:
      probability: 0.1
      params:
        pan_range: [-0.5, 0.5]
    apply_low_pass:
      probability: 0.1
      params:
        cutoffs: [500, 800, 1000, 1500, 2000]
    apply_high_pass:
      probability: 0.1
      params:
        cutoffs: [100, 150, 200, 300, 400]
    apply_normalize:
      probability: 0.1
    apply_compression:
      probability: 0.25   # Increase from 0.15
      params:
        threshold_range: [-30, -10]
        ratio_range: [2, 6] 